# -*- coding: utf-8 -*-
"""third.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q5HP1RYR9qLtNTn4VQjYwlVMFf04xhEb
"""

import numpy as np
import pandas as pd 
import matplotlib.pyplot as plt
df = pd.read_csv('01_District_wise_crimes_committed_IPC_2001_2012.csv')

df.head()

df = df.loc[:,['STATE/UT','DISTRICT','YEAR','KIDNAPPING & ABDUCTION']]

df.head()

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
le.fit(df['STATE/UT'])
df['STATE/UT'] = le.transform(df['STATE/UT'])

le2 = LabelEncoder()
le2.fit(df['DISTRICT'])
df['DISTRICT'] = le2.transform(df['DISTRICT'])

df.head()

X = df.iloc[:,0:3]
y = df['KIDNAPPING & ABDUCTION']

X.head()

y.head()

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state = 2)

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score

model = RandomForestRegressor()
model.fit(X_train,y_train)
y_pred_train= model.predict(X_train)
y_pred_test= model.predict(X_test)
train_score = r2_score(y_train,y_pred_train)
test_score= r2_score(y_test,y_pred_test)

train_score

test_score

df.sample()

x = [25,596,2009]
y = model.predict([np.array(x)])
y

import pickle

pickle.dump(model,open('f_kidnappingmodel.pkl','wb'))
from google.colab import files
files.download('f_kidnappingmodel.pkl')

data = pd.read_csv('01_District_wise_crimes_committed_IPC_2001_2012.csv')

data.head()

state_data = data[data['DISTRICT']=='TOTAL']

state_data

import seaborn as sns
plt.figure(figsize=(25,25))
plt.title('MURDER CASES IN INDA')
splot = sns.barplot(x = 'STATE/UT',y='MURDER',data = state_data,ci=None)
for p in splot.patches:
  splot.annotate(format(int(p.get_height()), 'd'), (p.get_x() + p.get_width() / 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')
plt.xticks(rotation=90)
plt.show()

plt.figure(figsize=(30,30))
plt.pie(state_data['MURDER'],labels= state_data['STATE/UT'])







data.shape

data.head()

x = 'ODISHA'
data.head()

data.head()

data.shape

df_x = data[data['DISTRICT']!='TOTAL']

df_x.shape

x = 'ODISHA'
df_x = df_x[df_x['STATE/UT']==x]

df_x.shape

df_x = df_x[df_x['YEAR']==2010]

df_x

plt.figure(figsize=(20,20))
splot = sns.barplot(x = 'DISTRICT',y = 'MURDER',data = df_x)
for p in splot.patches:
  splot.annotate(format(int(p.get_height()), 'd'), (p.get_x() + p.get_width() / 2., p.get_height()), ha = 'center', va = 'center', xytext = (0, 10), textcoords = 'offset points')
plt.xticks(rotation=90)
plt.show()

!pip install geopandas

import geopandas as gpd

!pip install geopandas

import geopandas as gpd

shp_gdf = gpd.read_file('India_State_Boundary.shp')

shp_gdf

state_data = state_data[state_data['YEAR']==2010]

state_data



map_data = state_data.copy()



map_data['STATE/UT'] = state_data['STATE/UT'].apply(lambda x : x.lower())

map_data

map_data.loc[:,['STATE/UT','MURDER','RAPE','KIDNAPPING & ABDUCTION']]

shp_gdf

map_data['STATE/UT'] = map_data['STATE/UT'].apply(lambda x : x.capitalize())

map_data.iloc[0,0] = 'Andhra Pradesh'

map_data.iloc[1,0] = 'Arunachal Pradesh'

map_data.loc[6785,'STATE/UT'] = 'Chhattishgarh'

map_data

map_data.loc[6860,'STATE/UT'] = 'Himachal Pradesh'

map_data

map_data.loc[6890,'STATE/UT'] = 'Jammu and Kashmir'

map_data

map_data.loc[7025,'STATE/UT'] = 'Madhya Pradesh'

map_data.loc[7262,'STATE/UT'] = 'Tamilnadu'

map_data.loc[7342,'STATE/UT'] = 'Uttar Pradesh'

map_data.loc[7381,'STATE/UT'] = 'West Bengal'

map_data

map_data.loc[7384,'STATE/UT'] = 'Andaman & Nicobar'

map_data = map_data.loc[:,['STATE/UT','MURDER','RAPE','KIDNAPPING & ABDUCTION']]

map_data

shp_gdf

merge =shp_gdf.set_index('State_Name').join(map_data.set_index('STATE/UT'))

merge

merge['MURDER'].fillna(merge['MURDER'].mean(),inplace = True)

merge

merge['MURDER'].fillna(merge['MURDER'].mean(),inplace = True)

merge['RAPE'].fillna(merge['RAPE'].mean(),inplace = True)

merge['KIDNAPPING & ABDUCTION'].fillna(merge['KIDNAPPING & ABDUCTION'].mean(),inplace = True)

merge

fig,ax=plt.subplots(1, figsize=(10,10))

ax.set_title('State-wise Cases',
             fontdict={'fontsize': '15', 'fontweight' : '3'})
fig = merge.plot(column='MURDER', cmap='YlOrBr', linewidth=0.5, ax=ax, edgecolor='0.2',legend=True)

merge.to_csv('mapss.csv')

from google.colab import files

files.download('mapss.csv')